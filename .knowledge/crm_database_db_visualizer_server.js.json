{"is_source_file": true, "format": "JavaScript", "description": "This file is a server-side JavaScript application using Express.js to provide a web interface and API for visualizing and testing database connections across multiple database types (PostgreSQL, MySQL, SQLite, MongoDB). It includes classes for database adapters, configuration loading, and API route handling.", "external_files": ["path", "fs", "pg", "mysql2/promise", "sqlite3", "mongodb"], "external_methods": ["require", "fs.existsSync", "fs.readFileSync", "path.join", "express()", "app.use", "app.get", "res.setHeader", "res.header", "res.sendStatus", "express.static", "new Pool", "mysql.createConnection", "sqlite3.Database", "MongoClient.connect", "client.close", "client.db", "db.listCollections", "db.collection", "collection.find", "collection.limit", "collection.toArray", "app.listen"], "published": ["loadEnvFiles", "testConnections", "handleApiRequest"], "classes": [{"name": "DatabaseAdapter", "description": "Base class for database adapters, providing interface methods for testing connection, retrieving tables, and fetching data."}, {"name": "SQLAdapter", "description": "Abstract class extending DatabaseAdapter, providing common SQL execution methods and table/data retrieval logic."}, {"name": "PostgresAdapter", "description": "Adapter for PostgreSQL, implementing execute, getTableQuery, and getDataQuery methods."}, {"name": "MySQLAdapter", "description": "Adapter for MySQL, implementing execute, getTableQuery, and getDataQuery methods."}, {"name": "SQLiteAdapter", "description": "Adapter for SQLite, implementing execute, getTableQuery, and getDataQuery methods."}, {"name": "MongoDBAdapter", "description": "Adapter for MongoDB, implementing connection, getTables, and getData methods."}], "methods": [{"name": "loadEnvFiles", "description": "Loads environment variables from .env files for different database types."}, {"name": "testConnections", "description": "Tests connections to configured databases and returns a list of available ones."}, {"name": "handleApiRequest", "description": "Generic handler for API requests, executing database operations and returning JSON responses."}], "calls": ["require", "fs.existsSync", "fs.readFileSync", "path.join", "app.use", "app.get", "res.setHeader", "res.header", "res.sendStatus", "express.static", "new Pool", "mysql.createConnection", "sqlite3.Database", "MongoClient.connect", "client.close", "client.db", "db.listCollections", "db.collection", "collection.find", "collection.limit", "collection.toArray", "app.listen"], "search-terms": ["Database visualization", "Express.js server", "multi-database support", "PostgreSQL adapter", "MongoDB collection listing", "SQLite data retrieval", "MySQL connection testing", "environment variable loading", "API for database info"], "state": 2, "file_id": 4, "knowledge_revision": 11, "git_revision": "003f800edce3d8090f943503c44b9cbfe2144522", "ctags": [], "filename": "crm_database/db_visualizer/server.js", "hash": "745023e15b83976a75e5d48c263a24b9", "format-version": 4, "code-base-name": "https://github.com/kavia-common/customer-relationship-management-platform-164395-164407.git:kavia-main", "revision_history": [{"11": "003f800edce3d8090f943503c44b9cbfe2144522"}]}